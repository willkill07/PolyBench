env:
  global:
    - secure: "jPmM8XZC7MqWZU3KWBd10h9MG1nT6kaOr8ZX3UkCJfPfanFEFVAEkDYtKS7XI3tFR7W/FVtNf7Uhx5kIGdgQwQ2RFska9aQoftKVotlMQjsPdz2nPht+3Sgz0vbY6+3qgZcgzBjTSJ1/uF6fYtXK7THHm4GPuurruCCTrCmZqflH2BILeCBHuhuMa9WZQOGH8Y0Dok5x+j/aJUqiw0TVo1TtYq05yxJB8qeWmxJgwb7wBolWfdgHDpGGw6qOIDmowd1jNp9hcUCHqr6LkRe9adPV6X0v37EPi7wyOmpXh/AjPeV30BKSsA5CzfhaeD8wr6dO9cdOLjGlcZIBgUutnXW8EZxBj0kTudfY+B4mwfUpoCUdiMv8as0iOp1wMepyTbuKYdpig6fRyywxdW56hQXdQnaHA63OJsZA/B5v5lO5NJE2/EETKbi+ZQoi6Exh7QebC7OhMAntnTYgljxjUkt6EOrSrFClzpG8pLZaUhmDH5x+IY9y1uXFJKl8aTKjwTZdU7UMqQFiwdLzGo/00/n1VLxmaJoE/xeBQ9T8n8VnjgdN39NEeyWQf8CWvtdpjYlpXL1bDZKuL21POUvHcr5QdravVxomZiBZzya5BAfHjVWukJ+7mW/RnuPH4Z8QwBKLmas0DkzSX8BFUQt7C4JVKzrwiCiG2zY4xcX0xv8="
    - secure: "dWaTF2Th2aULLHsi6oj6edIdqeSzZS/6O31Dt3zeZolDXJl5w8BRNJVZ23slkAhQvcLAYb++liwc7EqAXGCET0266y56plxn7x6P6dcFc/ebIBxKtZ3HPSgKKyfoEvRlHicR893nprB+NsVq9D095n2/dAOdV0oy0+ws7DZzxQTLIt2dwpReloxFFP7NyJszLgWTXTfXj+fybNbEhyBQZvlnsb707pgmWh8Sn3GfvZBbHdwUkKO0xncSXaU0KyR6JYpm7ciWNCwclf9d0CPjaTO5Borex/w+B8AIVakB0zk5GPSxCG6FLck4JMgA8Y77N++pMjyyKHA38lMhMTA9gFdzkW0pioE+fxHykVHusiHxgyuyoxlCKN1tM03ef10c/XbkwBBNZVXki8/Vr0QCI7QmBRWc02NPWmJXvmLPRd6UT3Sd0C7NF05OHfwjolutegeclLUaFvvfCU2Zps6epiLBM2LkTo2UScvyd+CEklDDT1/YDq/TiIMeFWVG9IX8dUfvVjAyHicJoMbnlKUrRs8YhJ9vxYfaihq5qra7uhhaRMSrgQACJT0ywqGET0HLzpHG2E3dXgvdwJERj+ZQsD3dwrgfsNX/UQFwplLalOEC3pSGdWF4zfFj4lzXrB25MzAhJFhgGGfV5PSQVm2uVpE4mSNvj4YGoXj0EfLp2Ts="

matrix:
  include:
   - sudo: required
     dist: trusty
     compiler: gcc-4
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-4.9
     env:
       - COMPILER=g++-4.9
       - _CC=gcc-4.9
       - _CXX=g++-4.9
       - OMP_NUM_THREADS=2
   - sudo: required
     dist: trusty
     compiler: gcc-5
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-5
     env:
       - COMPILER=g++-5
       - _CC=gcc-5
       - _CXX=g++-5
       - OMP_NUM_THREADS=2
   - sudo: required
     dist: trusty
     compiler: gcc-6
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-6
     env:
       - COMPILER=g++-6
       - _CC=gcc-6
       - _CXX=g++-6
       - OMP_NUM_THREADS=2
   - sudo: required
     dist: trusty
     compiler: clang-3.8
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-5
     env:
         - VERSION=clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04
         - COMPILER=$HOME/pkg/llvm-3.8
         - LLVM_DOWNLOAD=http://llvm.org/releases/3.8.0/${VERSION}.tar.xz
         - LLVM_PATH=$COMPILER/$VERSION
         - _CC=$LLVM_PATH/bin/clang
         - _CXX=$LLVM_PATH/bin/clang++
         - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LLVM_PATH/lib
         - OMP_NUM_THREADS=2
         - KMP_AFFINITY=scatter
   - compiler: intel-16
     sudo: required
     dist: trusty
     env:
         - VERSION=intel-16
         - COMPILER=$HOME/intel/$VERSION
         - INTEL_DOWNLOAD=http://registrationcenter-download.intel.com/akdlm/irc_nas/7997/parallel_studio_xe_2016_online.sh
         - _CC=icc
         - _CXX=icpc
         - OMP_NUM_THREADS=2
         - KMP_AFFINITY=scatter
   - sudo: required
     dist: trusty
     compiler: coverity
     env:
       - COMPILER=g++-6
       - _CC=gcc-6
       - _CXX=g++-6
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-6
       coverity_scan:
         project:
           name: "willkill07/PolyBench-RAJA"
           description: "PolyBench kernels written in the RAJA Portability Layer"
         notification_email: william.killian@gmail.com
         build_command_prepend: cov-configure -co /usr/bin/g++-6 -- -march=native && mkdir build && pushd build && CC=$CC CXX=$CXX cmake .. && popd
         build_command: "make -C build all"
         branch_pattern: master

before_install:
  - sudo apt-get update -qq
  - mkdir -p $HOME/pkg
  - if [[ -n "$LLVM_DOWNLOAD" ]] ; then if [[ ! -d "$COMPILER" ]]; then mkdir -p $COMPILER && pushd $HOME && curl -o tarball.tar.xz $LLVM_DOWNLOAD && cd $COMPILER && tar xf $HOME/tarball.tar.xz && popd ; fi ; fi
  - if [[ -n "$INTEL_DOWNLOAD" ]] ; then if [[ ! -d "$COMPILER" ]]; then ${PWD}/.travis/install-${VERSION}.sh --dest $COMPILER --components icc,openmp --url $INTEL_DOWNLOAD ; fi ; fi
  - export CC=$_CC
  - export CXX=$_CXX
script:
  - if [[ ${COVERITY_SCAN_BRANCH} == 1 ]]; then exit; fi
  - if [[ -n $INTEL_DOWNLOAD ]]; then source ${PWD}/.travis/config-${VERSION}.sh ; fi
  - $CC --version
  - $CXX --version
  - rm -rf build && mkdir build && cd build
  - cmake ..
  - make -j4
  - make test ARGS=-V
